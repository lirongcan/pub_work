# 常用正则表达式

(?<=goodsId:)[0-9]* 匹配前面是goodsId: 的多个数字字符串




# 语法篇

常用匹配内容
[ABC]: 匹配 [...] 中的所有字符，例如 [aeiou] 匹配字符串 "google runoob taobao" 中所有的 e o u a 字母。

[^ABC]: 匹配除了 [...] 中字符的所有字符，例如 [^aeiou] 匹配字符串 "google runoob taobao" 中除了 e o u a 字母的所有字母。

[A-Z] [0-9] [a-z]: 范围匹配

.: 匹配除换行符（\n、\r）之外的任何单个字符，相等于 [^\n\r]。

[\s\S]: 匹配所有字符 \s 是匹配所有空白符，包括换行，\S 非空白符，不包括换行。

\w: 匹配字母、数字、下划线。等价于 [A-Za-z0-9_]

\n: 匹配换行符

\r: 匹配回车

\t: 匹配tab


特殊字符

$ 匹配输入字符串的结尾位置。如果设置了 RegExp 对象的 Multiline 属性，则 $ 也匹配 '\n' 或 '\r'。要匹配 $ 字符本身，请使用 \$。

() 标记一个子表达式的开始和结束位置。子表达式可以获取供以后使用。要匹配这些字符，请使用 \( 和 \)。

* 匹配前面的子表达式零次或多次。要匹配 * 字符，请使用 \*。

+ 匹配前面的子表达式一次或多次。要匹配 + 字符，请使用 \+。

. 匹配除换行符 \n 之外的任何单字符。要匹配 . ，请使用 \. 。

[ 标记一个中括号表达式的开始。要匹配 [，请使用 \[。

? 匹配前面的子表达式零次或一次，或指明一个非贪婪限定符。要匹配 ? 字符，请使用 \?。

\ 将下一个字符标记为或特殊字符、或原义字符、或向后引用、或八进制转义符。例如， 'n' 匹配字符 'n'。'\n' 匹配换行符。序列 '\\' 匹配 "\"，而 '\(' 则匹配 "("。

^ 匹配输入字符串的开始位置，除非在方括号表达式中使用，当该符号在方括号表达式中使用时，表示不接受该方括号表达式中的字符集合。要匹配 ^ 字符本身，请使用 \^。

{ 标记限定符表达式的开始。要匹配 {，请使用 \{。

| 指明两项之间的一个选择。要匹配 |，请使用 \|。



限定符号


* 匹配前面的子表达式零次或多次。例如，zo* 能匹配 "z" 以及 "zoo"。* 等价于{0,}。

+ 匹配前面的子表达式一次或多次。例如，'zo+' 能匹配 "zo" 以及 "zoo"，但不能匹配 "z"。+ 等价于 {1,}。

? 匹配前面的子表达式零次或一次。例如，"do(es)?" 可以匹配 "do" 、 "does" 中的 "does" 、 "doxy" 中的 "do" 。? 等价于 {0,1}。

{n} n 是一个非负整数。匹配确定的 n 次。例如，'o{2}' 不能匹配 "Bob" 中的 'o'，但是能匹配 "food" 中的两个 o。

{n,} n 是一个非负整数。至少匹配n 次。例如，'o{2,}' 不能匹配 "Bob" 中的 'o'，但能匹配 "foooood" 中的所有 o。'o{1,}' 等价于 'o+'。'o{0,}' 则等价于 'o*'。

{n,m} m 和 n 均为非负整数，其中n <= m。最少匹配 n 次且最多匹配 m 次。例如，"o{1,3}" 将匹配 "fooooood" 中的前三个 o。'o{0,1}' 等价于 'o?'。请注意在逗号和两个数之间不能有空格。


* 和 + 限定符都是贪婪的，因为它们会尽可能多的匹配文字，只有在它们的后面加上一个 ? 就可以实现非贪婪或最小匹配。

例如：
<h1>RUNOOB-菜鸟教程</h1>

/<.*>/匹配从开始小于符号 (<) 到关闭 h1 标记的大于符号 (>) 之间的所有内容。

/<.*?>/只匹配 <h1>。因为<h1>就是满足<.*?>的最小匹配


定位符

^ 匹配输入字符串开始的位置。如果设置了 RegExp 对象的 Multiline 属性，^ 还会与 \n 或 \r 之后的位置匹配。

$ 匹配输入字符串结尾的位置。如果设置了 RegExp 对象的 Multiline 属性，$ 还会与 \n 或 \r 之前的位置匹配。

\b 匹配一个单词边界，即字与空格间的位置。

\B 非单词边界匹配。


选择符号

()括住的表达式可以在后面用 \数字 使用

例子：
is is the cost of of gasoline going up up

/\b([a-z]+) \1\b/
匹配 单词边界+(1个或者多个字母)+一个空格+和前边括号中一模一样的内容+单词边界


exp1(?=exp2)：查找 exp2 前面的 exp1。

(?<=exp2)exp1：查找 exp2 后面的 exp1。

exp1(?!exp2)：查找后面不是 exp2 的 exp1。

(?<!exp2)exp1：查找前面不是 exp2 的 exp1。

运算符优先级

\ 转义

(), (?:), (?=), [] 圆括号和方括号

*, +, ?, {n}, {n,}, {n,m} 限定符

^, $, \任何元字符、任何字符 定位点和序列（即：位置和顺序）

| 替换，"或"操作字符具有高于替换运算符的优先级，使得"m|food"匹配"m"或"food"。若要匹配"mood"或"food"，请使用括号创建子表达式，从而产生"(m|f)ood"。


